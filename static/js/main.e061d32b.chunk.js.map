{"version":3,"sources":["Site.module.css","App.js","index.js"],"names":["module","exports","App","props","useState","value","label","setSelectedOption","selectedOptionvar","setSelectedOptionvar","selectedType","setSelectedType","date","Date","priorDate","setDate","getDate","dateRange","setDateRange","console","log","startDate","endDate","location","useLocation","history","useHistory","useCurrentPng","getPng","ref","optionsvariable","isLoading","renewablevariable","patentsvariable","startupvariable","googlevariable","queryoption","queryparse","search","queryString","parse","country","push","map","e","queryparsevar","type","queryoptionvar","ExampleCustomInput","forwardRef","onClick","className","classes","buttonActivedownload2","selecteddb","patents1","startup1","startup2","startup3","startup4","startup5","startup6","startup7","startup8","startup9","startup10","startup11","startup12","selectedVariable","selectedValue","sCountries","Country_ISO3","options","optionsall","filter","includes","filteredData","selectedData","keylists","some","f","Year","d","Set","toPercent","decimal","fixed","toFixed","handleDownload","useCallback","a","png","FileSaver","saveAs","colorBasket","countrylist","styles","menu","base","state","backgroundColor","borderRadius","boxShadow","height","option","isDisabled","isFocused","isSelected","menuList","maxHeight","dropdownIndicator","control","isHidden","borderStyle","borderColor","borderWidth","color","singleValue","fontSize","fontWeight","input","styleVar","textAlign","multiValue","renderLineChart","width","data","stackOffset","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","stackId","stroke","fill","buttonGroup","datagroup","buttonActive","button","handleChangeType","class","Layout","Mixer","Large","SearchBar","isSearchable","isMulti","onChange","handleChange","menuIsOpen","hideSelectedOptions","components","Control","Sm_Md","Visualisation","KeyFigure__Md_Lg","KeyFiguresWrapper","KeyFigures","newcon","length","pathname","stringify","handleChangevar","IndicatorsContainer","ControlInfo","InfoTooltip","selectsRange","customInput","update","withPortal","isClearable","LineGraph","downloadbuttons","buttonActivedownload","newCountries","newcountry","database","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e061d32b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadbuttons\":\"Site_downloadbuttons__7gdxv\",\"KeyFiguresWrapper\":\"Site_KeyFiguresWrapper__15ehG\",\"socialgroup\":\"Site_socialgroup__O1D-N\",\"socialgroupSM\":\"Site_socialgroupSM__1GIpP\",\"Control\":\"Site_Control__2RJnA\",\"ControlInfo\":\"Site_ControlInfo__2zile\",\"material-icons\":\"Site_material-icons__2TOs4\",\"InfoTooltip\":\"Site_InfoTooltip__3KO1t\",\"download\":\"Site_download__3gOfN\",\"fullstory\":\"Site_fullstory__23vxB\",\"download-icon\":\"Site_download-icon__2v_oR\",\"span\":\"Site_span__3N-Gh\",\"ControlInfoS\":\"Site_ControlInfoS__2U5WT\",\"InfoTooltipS\":\"Site_InfoTooltipS__1ygIs\",\"KeyFigures\":\"Site_KeyFigures__2zev1\",\"LineGraph\":\"Site_LineGraph__1SmN9\",\"Visualisation\":\"Site_Visualisation__37KdB\",\"textgroup\":\"Site_textgroup__3UDlv\",\"Layout\":\"Site_Layout__2re9a\",\"Mixer\":\"Site_Mixer__1AFz7\",\"Sm_Md\":\"Site_Sm_Md__3eQDz\",\"Large\":\"Site_Large__1BjKJ\",\"SearchBar\":\"Site_SearchBar__2M5Y2\",\"datagroup\":\"Site_datagroup__1MDw8\",\"SearchBar__Sm\":\"Site_SearchBar__Sm__3TLuw\",\"buttonGroup\":\"Site_buttonGroup__3beEl\",\"keybutton\":\"Site_keybutton__2MgHS\",\"header\":\"Site_header__3eabk\",\"title\":\"Site_title__3JPvq\",\"box\":\"Site_box__lfDpe\",\"TableHeader\":\"Site_TableHeader__2ZyIy\",\"button\":\"Site_button__yzVVc\",\"TableSearch\":\"Site_TableSearch__1SMJz\",\"mapContainer\":\"Site_mapContainer__2vyGm\",\"legend\":\"Site_legend__1m2rE\",\"Tooltip\":\"Site_Tooltip__y2-WU\",\"popup\":\"Site_popup__2VawH\",\"buttondist\":\"Site_buttondist__87ZIL\",\"buttonActive\":\"Site_buttonActive__DvDaW\",\"buttonActivedownload\":\"Site_buttonActivedownload__1FUeK\",\"buttonActivedownload2\":\"Site_buttonActivedownload2__3E5Z9\",\"topleft\":\"Site_topleft__28VNt\",\"table\":\"Site_table__27zvs\",\"tooltip\":\"Site_tooltip__2X4Yn\",\"logo\":\"Site_logo__2Iq7E\"};","import React, { useState, useCallback, forwardRef } from 'react';\r\nimport Select, { components } from 'react-select'\r\nimport './index.css';\r\nimport data from './data.json';\r\nimport renewablevariable from './renewablevariable.json';\r\nimport patentsvariable from './patentsvariable.json';\r\nimport startupvariable from './startupvariable.json';\r\nimport googlevariable from './googlevariable.json';\r\nimport optionsall from './option.json';\r\n// import wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport { FacebookShareButton, FacebookIcon, TwitterIcon, TwitterShareButton} from 'react-share';\r\n// import { Badge, Chip } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import StackGrid from \"react-stack-grid\";\r\n// import { Web, Videocam, Description, PictureAsPdf} from '@material-ui/icons';\r\n// import ReactGA from 'react-ga';\r\nimport { AreaChart, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport queryString from \"query-string\";\r\nimport { useLocation, useParams, useHistory } from 'react-router';\r\nimport { useCurrentPng } from \"recharts-to-png\";\r\nimport FileSaver from \"file-saver\";\r\nimport patents1 from './patents1.json'\r\nimport startup1 from './startup1.json'\r\nimport startup2 from './startup2.json'\r\nimport startup3 from './startup3.json'\r\nimport startup4 from './startup4.json'\r\nimport startup5 from './startup5.json'\r\nimport startup6 from './startup6.json'\r\nimport startup7 from './startup7.json'\r\nimport startup8 from './startup8.json'\r\nimport startup9 from './startup9.json'\r\nimport startup10 from './startup10.json'\r\nimport startup11 from './startup11.json'\r\nimport startup12 from './startup12.json'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst App = props => {\r\n\r\n  \r\n  const variablelist = {\"renewable1\":\"variable\",\"renewable2\":\"variable\",\"renewable3\":\"variable\",\"patents1\":\"Technology\",\"patents2\":\"Technology\",\"startup1\":\"sector\",\"startup2\":\"sector\",\"startup3\":\"sector\",\"startup4\":\"technology_field\",\"startup5\":\"sector\",\"startup6\":\"sector\",\"startup7\":\"sector\",\"startup8\":\"technology_field\",\"google1\":\"technology\"}\r\n  const valuelist = {\"renewable1\":\"share of res in demand\",\"renewable2\":\"share of res in demand\",\"renewable3\":\"share of res in demand\",\"patents1\":\"Value\",\"patents2\":\"Share\",\"startup1\":\"number_of_companies\",\"startup2\":\"number_of_companies\",\"startup3\":\"number_of_companies\",\"startup4\":\"number_of_companies\",\"startup5\":\"raised_amount_usd\",\"startup6\":\"raised_amount_usd\",\"startup7\":\"raised_amount_usd\",\"startup8\":\"raised_amount_usd\",\"google1\":\"value\"}\r\n\r\n  const [selectedOption, setSelectedOption] = useState([{value: 'AUS', label: 'Australia'}]);\r\n  const [selectedOptionvar, setSelectedOptionvar] = useState({value: 'startup1', label: 'Energy'});\r\n  const [selectedType, setSelectedType] = useState('startup');\r\n  \r\n  ////////////// Date set\r\n  \r\n  const date=new Date();\r\n  const priorDate = new Date(new Date().setDate(date.getDate() - 90));\r\n  // myPastDate.setDate(myPastDate.getDate() - 8);\r\n\r\n  const [dateRange, setDateRange] = useState([priorDate,date]);\r\n  console.log(date.getDate())\r\n  const [startDate, endDate] = dateRange;\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [getPng, { ref, isLoading }] = useCurrentPng();\r\n  // let optionsvariable = []\r\n  const optionsvariable = selectedType === \"renewable\"? renewablevariable : selectedType ===\"patents\"? patentsvariable : selectedType ===\"startup\"? startupvariable : googlevariable\r\n  \r\n  const queryoption =[]\r\n\r\n  const queryparse = location.search===\"\"?  \"AUS\" : queryString.parse(location.search).country \r\n  typeof queryparse==='string'? queryoption.push({value:queryparse,label:queryparse}) : queryparse.map(e => queryoption.push({value:e,label:e}))  \r\n  const queryparsevar = location.search===\"\"?  'startup1' : queryString.parse(location.search).type\r\n  const queryoptionvar ={value:queryparsevar,label:optionsvariable.map(e=>e.value===queryparsevar? e.label : null)}\r\n\r\n  \r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className={classes.buttonActivedownload2} onClick={onClick} ref={ref}>\r\n      {value}\r\n    </button>\r\n  ));\r\n\r\n\r\n///////////////////////\r\n\r\n// patents1.filter['Country_ISO3']\r\n// patents1\r\n// const selecteddb = startup1\r\n// const selectedVariable=\"sector\"\r\n// const selectedValue=\"number_of_companies\"\r\n\r\n\r\n\r\nconst selecteddb = queryoptionvar.value===\"patents1\"? patents1 : queryoptionvar.value===\"startup1\"? startup1 : queryoptionvar.value===\"startup2\"? startup2 : queryoptionvar.value===\"startup3\"? startup3 : queryoptionvar.value===\"startup4\"? startup4 :queryoptionvar.value===\"startup5\"? startup5 :queryoptionvar.value===\"startup6\"? startup6 :queryoptionvar.value===\"startup7\"? startup7 :queryoptionvar.value===\"startup8\"? startup8 : queryoptionvar.value===\"startup9\"? startup9 : queryoptionvar.value===\"startup10\"? startup10 : queryoptionvar.value===\"startup11\"? startup11 : startup12\r\nconst selectedVariable=variablelist[queryoptionvar.value]\r\nconst selectedValue=valuelist[queryoptionvar.value]\r\n\r\n\r\n\r\nconst sCountries = []\r\nselecteddb.map(e => sCountries.push(e.Country_ISO3))\r\nconst options = optionsall.filter(e => sCountries.includes(e.value))\r\n\r\nconst filteredData = selecteddb.filter(e => e.Country_ISO3 === queryparse)\r\n\r\n\r\nconst selectedData = []\r\nlet keylists = []\r\nfilteredData.map(e => selectedData.some(f => f[\"Year\"] == e.Year)? null : selectedData.push({\"Year\":e.Year,\"Label\":e.Year}))\r\nfilteredData.map(e => keylists.push(e[selectedVariable]))\r\nfilteredData.map(d => selectedData.map(e => e.Year === d.Year? e[d[selectedVariable]] = d[selectedValue] : null ))\r\nkeylists = [...new Set(keylists)]\r\n\r\nconsole.log(selectedData)\r\n\r\n\r\n  const data = [\r\n    {\r\n      month: '2015.01',\r\n      a: 4000,\r\n      b: 2400,\r\n      c: 2400,\r\n    },\r\n    {\r\n      month: '2015.02',\r\n      a: 3000,\r\n      b: 1398,\r\n      c: 2210,\r\n    },\r\n    {\r\n      month: '2015.03',\r\n      a: 2000,\r\n      b: 9800,\r\n      c: 2290,\r\n    },\r\n    {\r\n      month: '2015.04',\r\n      a: 2780,\r\n      b: 3908,\r\n      c: 2000,\r\n    },\r\n    {\r\n      month: '2015.05',\r\n      a: 1890,\r\n      b: 4800,\r\n      c: 2181,\r\n    },\r\n    {\r\n      month: '2015.06',\r\n      a: 2390,\r\n      b: 3800,\r\n      c: 2500,\r\n    },\r\n    {\r\n      month: '2015.07',\r\n      a: 3490,\r\n      b: 4300,\r\n      c: 2100,\r\n    },\r\n  ];\r\n  \r\n  const toPercent = (decimal, fixed = 0) => `${(decimal * 100).toFixed(fixed)}%`;\r\n  \r\n  const getPercent = (value, total) => {\r\n    const ratio = total > 0 ? value / total : 0;\r\n  \r\n    return toPercent(ratio, 2);\r\n  };\r\n  \r\n\r\n///////////////////////////////\r\n\r\n\r\n\r\nconst handleDownload = useCallback(async () => {\r\n  const png = await getPng();\r\n  // Verify that png is not undefined\r\n  if (png) {\r\n    // Download with FileSaver\r\n    FileSaver.saveAs(png, 'myChart.png');\r\n  }\r\n}, [getPng]);\r\n\r\n\r\nconst locale = \"en\"\r\n\r\n\r\nconst colorBasket = [\r\n  \"#a70000\",\r\n  \"rgb(246,186,112)\",\r\n  \"rgb(42,79,95)\",  \r\n  \"rgb(67,107,101)\",\r\n  \"rgb(133,163,147)\",    \r\n  \"rgb(197,209,191)\",\r\n  \"#F2DFD7\",  \r\n  \"#d4c1ec\",\r\n  \"#9f9fed\",    \r\n  \"#736ced\",\r\n  \"#bdc667\",\r\n  \"#77966d\",  \r\n  \"#626d58\",\r\n  \"#544343\",    \r\n  \"#56282d\",\r\n  ];  \r\n\r\n\r\n\r\n// let varlist = selectedType === 'patents'? {\"label\":\"haha\",\"value\":\"hoho\"} : null\r\n\r\nconst disableList = {\r\n  \"hv108\":[\"Malawi 2012\",\"Madagascar 2011\",\"Madagascar 2013\",\"Angola 2011\",\"Madagascar 2016\",\"Burkina Faso 2014\",\"Angola 2006\",\"Burkina Faso 2017\",\"Malawi 2014\",\"Uganda 2009\",\"Malawi 2017\",\"Ghana 2019\",\"Mali 2010\",\"Liberia 2009\",\"Mali 2015\",\"Liberia 2016\",\"Mozambique 2018\",\"Uganda 2014\",\"Rwanda 2008\",\"Kenya 2015\",\"Senegal 2008\",\"Uganda 2018\",\"Sierra Leone 2016\",\"Liberia 2011\",\"Tanzania 2017\",\"Ghana 2016\",\"Togo 2017\"],\t\r\n  \"hv206\":[\"Mali 2010\"],\t\t\r\n  \"hv207\":[\"Mali 2010\"],\t\t\r\n  \"hv208\":[\"Mali 2010\"],\t\r\n  \"hv209\":[\"Ethiopia 2000\",\"Malawi 2000\",\"Mali 2010\"],\t\r\n  \"hv210\"\t:[\"Mali 2010\"],\t\r\n  \"hv211\"\t:[\"Mali 2010\"],\t\r\n  \"hv212\"\t:[\"Mali 2010\"],\t\r\n  \"hv225\"\t:[\"Mali 2010\",\"Tanzania 2003\",\"Senegal 2008\",\"Angola 2011\",\"Nigeria 2010\",\"Liberia 2009\",\"Angola 2006\",\"Uganda 2009\"],\t\r\n  \"hv243a\":[\"Kenya 2003\",\"Guinea 2005\",\"Uganda 2000\",\"Benin 2001\",\"Lesotho 2004\",\"Cameroon 2004\",\"Malawi 2000\",\"Egypt 2003\",\"Malawi 2004\",\"Egypt 2005\",\"Ethiopia 2000\",\"Ethiopia 2005\",\"Mali 2001\",\"Tanzania 2003\",\"Mali 2010\",\"Egypt 2000\",\"Morocco 2003\",\"Ghana 2003\",\"Namibia 2000\",\"Senegal 2005\",\"Nigeria 2003\",\"Burkina Faso 2003\",\"Rwanda 2005\"],\t\r\n  \"hv247\":[\"Kenya 2008\",\"Uganda 2011\",\"Lesotho 2004\",\"Angola 2011\",\"Liberia 2009\",\"Burkina Faso 2003\",\"Malawi 2000\",\"Democratic Republic of the Congo 2007\",\"Uganda 2006\",\"Malawi 2004\",\"Egypt 2000\",\"Mali 2001\",\"Egypt 2005\",\"Mali 2006\",\"Mali 2010\",\"Uganda 2000\",\"Morocco 2003\",\"Ghana 2003\",\"Mozambique 2009\",\"Kenya 2003\",\"Namibia 2000\",\"Benin 2001\",\"Nigeria 2003\",\"Egypt 2003\",\"Nigeria 2010\",\"Ethiopia 2005\",\"Rwanda 2005\",\"Angola 2006\",\"Rwanda 2008\",\"Ethiopia 2000\",\"Senegal 2005\",\"Cameroon 2004\",\"Senegal 2008\",\"Guinea 2005\",\"South Africa 2017\"],\t\r\n  \"Education\":[\"Malawi 2012\",\"Madagascar 2011\",\"Madagascar 2013\",\"Angola 2011\",\"Madagascar 2016\",\"Burkina Faso 2017\",\"Angola 2006\",\"Malawi 2014\",\"Malawi 2017\",\"Ghana 2016\",\"Mali 2010\",\"Kenya 2015\",\"Mali 2015\",\"Liberia 2011\",\"Mozambique 2018\",\"Uganda 2018\",\"Rwanda 2008\",\"Uganda 2014\",\"Senegal 2008\",\"Liberia 2009\",\"Sierra Leone 2016\",\"Burkina Faso 2014\",\"Tanzania 2017\",\"Liberia 2016\",\"Togo 2017\",\"Ghana 2019\",\"Uganda 2009\"]\r\n}\r\n\r\n// options.map(e => disableList[selectedOptionvar.value].includes(e.value)? e.isDisabled=true : e.isDisabled=false)\r\n\r\n\r\n\r\nconst countrylist = []\r\n\r\n\r\nqueryoption.map(d=>countrylist.push(d.value))\r\n\r\n\r\n\r\n  \r\n\r\n  const styles = {    \r\n    menu: (base, state) => {\r\n        return {\r\n            ...base,\r\n            backgroundColor: \"#ffffff\",\r\n            // backgroundColor: \"#fef7e7\",\r\n            borderRadius: 0,\r\n            boxShadow: 0,\r\n            height: '572px',\r\n            // opacity: \".9\"\r\n        }\r\n    },\r\n    option: (base, { isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...base,\r\n        backgroundColor: isSelected ? \"#a70000\" : null,\r\n        // color: isDisabled\r\n        //   ? '#ccc'\r\n        //   : isSelected\r\n        //   ? chroma.contrast(color, 'white') > 2\r\n        //     ? 'white'\r\n        //     : 'black'\r\n        //   : data.color,\r\n        ':active': {\r\n          // ...styles[':active'],\r\n          // backgroundColor: isSelected ? \"#a70000\" : \"#a70000\",\r\n          // opacity: isSelected ? \".4\" : \".7\",\r\n          // color: isSelected ? \"#fef7e7\" : \".7\",\r\n        },\r\n      }\r\n    },\r\n    menuList: (base, state) => {\r\n        return {\r\n            ...base,\r\n            maxHeight: 'none',\r\n            height: '100%',\r\n        }\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n      return { ...base,\r\n        \r\n      };\r\n    },\r\n    control: (base, state) => {\r\n      return { ...base,\r\n        isHidden: true, \r\n        boxShadow: 'none',\r\n        backgroundColor: 'none',\r\n        borderStyle: 'solid', \r\n        borderColor: '#449999',\r\n        borderWidth: '0px',\r\n        color: 'none', \r\n        \"&:hover\": { \r\n        }\r\n      };\r\n    },\r\n    singleValue: (base, state) => {\r\n      return {\r\n        ...base,\r\n        fontSize:'2rem',\r\n        fontWeight:'600',\r\n        color: '#212529',\r\n      }\r\n    },\r\n    input: (base, state) => {\r\n      return {\r\n        ...base,\r\n        fontSize:'2rem',\r\n        fontWeight:'900',\r\n        color: '#212529'\r\n      }\r\n    }\r\n};\r\n\r\n\r\nconst IndicatorsContainer = props => {  \r\n  return (\r\n    <div className={classes.Control}>\r\n      <div className={classes.ControlInfo}>\r\n        <i className={classes[\"material-icons\"]}> info </i>\r\n        <div className={classes.InfoTooltip}>\r\n            {\"indicator explanation\"}\r\n        </div>\r\n      </div>\r\n      <components.IndicatorsContainer {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst renderTooltip = (props) => {\r\n  if (props.active && props.payload !== null && props.payload[0] !== null) {\r\n    let payload = props.payload[0].payload;\r\n    let tooltip = null;    \r\n          tooltip = selectedOptionvar.label==='Education completed in single years'? (\r\n            <div className={classes.Tooltip}>            \r\n              {props.payload.map((i, idx) => (\r\n                <p\r\n                  key={idx}\r\n                  style={{\r\n                    color: i.color,\r\n                    marginLeft: \"10px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  {i.dataKey}: {Math.round(i.value * 100) / 100} years\r\n                </p>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.Tooltip}>            \r\n              {props.payload.map((i, idx) => (\r\n                <p\r\n                  key={idx}\r\n                  style={{\r\n                    color: i.color,\r\n                    marginLeft: \"10px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  {i.dataKey}: {Math.round(i.value * 1000) / 10}%\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        \r\n\r\n    return tooltip;\r\n  }\r\n}\r\n\r\nconst styleVar = {\r\n  // indicatorSeparator: (base, state) => {\r\n\r\n  // },\r\n  menu: (base, state) => {\r\n      return {\r\n          ...base,\r\n          backgroundColor: \"white\",\r\n          borderRadius: 0,\r\n          boxShadow: 0,\r\n      }\r\n  },\r\n  menuList: (base, state) => {\r\n      return {\r\n          ...base,\r\n      }\r\n  },\r\n  control: (base, state) => {\r\n    return { ...base,\r\n      isHidden: true, \r\n      boxShadow: 'none',\r\n      backgroundColor: 'none',\r\n      borderStyle: 'solid', \r\n      borderColor: '#449999',\r\n      borderWidth: '0px',\r\n      color: 'none', \r\n      \"&:hover\": { \r\n      }\r\n    };\r\n  },\r\n  singleValue: (base, state) => {\r\n    return {\r\n      ...base,      \r\n      color: '#212529',\r\n      textAlign: \"right\",\r\n    }\r\n  },\r\n  input: (base, state) => {\r\n    return {\r\n      ...base,\r\n      color: '#212529'\r\n    }\r\n  },\r\n  multiValue: (base, state) => {\r\n    return {\r\n      ...base,\r\n      color: '#212529',\r\n      textAlign: \"right\",\r\n      backgroundColor: '#ffffff'\r\n    }\r\n  }\r\n};\r\n\r\nlet renderLineChart = (\r\n  <ResponsiveContainer height=\"100%\" ref={ref}>     \r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={selectedData}\r\n          stackOffset=\"expand\"\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Year\" />\r\n          <YAxis tickFormatter={toPercent} />\r\n          {/* <Legend/> */}\r\n          <Tooltip/>          \r\n          {keylists.map((e,f) => \r\n            <Area type=\"monotone\" dataKey={e} stackId=\"1\" stroke={colorBasket[f]} fill={colorBasket[f]} />  \r\n            )}\r\n          {/* <Area type=\"monotone\" dataKey=\"All technologies (total patents)\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" /> */}\r\n          {/* <Area type=\"monotone\" dataKey=\"b\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n          <Area type=\"monotone\" dataKey=\"c\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" /> */}\r\n        </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nlet buttonGroup = (\r\n  <div className={classes.buttonGroup}>\r\n    <div className={classes.datagroup}>\r\n      <button className={selectedType === 'renewable'? classes.buttonActive : classes.button} onClick={() => handleChangeType('renewable',setSelectedType,history,queryparse,queryparsevar)}>Renewable energy</button>\r\n      <button className={selectedType === 'patents'? classes.buttonActive : classes.button} onClick={() => handleChangeType('patents',setSelectedType,history,queryparse,queryparsevar)}>Patents</button>\r\n      <button className={selectedType === 'startup'? classes.buttonActive : classes.button} onClick={() => handleChangeType('startup',setSelectedType,history,queryparse,queryparsevar)}>Start-ups</button>\r\n      <button className={selectedType === 'google'? classes.buttonActive : classes.button} onClick={() => handleChangeType('google',setSelectedType,history,queryparse,queryparsevar)}>Google Trends</button>\r\n    </div>\r\n    {/* <div className={classes.socialgroup}>\r\n      <TwitterShareButton\r\n        url={\"https://mkmdivy.github.io/barchartrace/\"+location.search}\r\n        title={\"The Economic Power of Africa's cities \\n\" + selectedOptionvar.label + \":\" + queryparse.toString() + \"\\n\" + \"Explore more here:\"}\r\n        className=\"Demo__some-network__share-button\">\r\n        <TwitterIcon\r\n          size={38}\r\n          bgStyle={{ fill: 'white'}} iconFillColor='#00ACEE'\r\n          round\r\n           />\r\n      </TwitterShareButton>\r\n      <FacebookShareButton\r\n      url={\"https://mkmdivy.github.io/barchartrace/\"+location.search}\r\n      title=\"The Economic Power of Africa's cities\"\r\n      className=\"Demo__some-network__share-button\">\r\n      <FacebookIcon \r\n      size={38} \r\n      bgStyle={{ fill: 'white'}} iconFillColor='#4267B2'\r\n      round\r\n      />\r\n      </FacebookShareButton>      \r\n      <i className={classes.download} onClick={handleDownload}>\r\n        <i className={classes[\"download-icon\"]}> get_app </i>      \r\n      </i>      \r\n    </div> */}\r\n</div>\r\n);\r\n\r\n// let menubar = (\r\n// );\r\n\r\n  \r\nreturn (  \r\n<div class={classes.Layout}>\r\n  <div class={classes.Mixer}>\r\n    <div className={classes.Large}>\r\n      <div className={classes.SearchBar}>\r\n        <Select \r\n        styles={styles}\r\n        options={options} \r\n        isSearchable={false}\r\n        isMulti \r\n        value={queryoption}\r\n        onChange={ (e,d) => handleChange(e,d,history, selectedOptionvar,setSelectedOption,queryparsevar,selectedType)\r\n          // e => pushQuery(history,{country:e[1].value})\r\n          // setSelectedOption      \r\n        }\r\n        menuIsOpen={true}\r\n        hideSelectedOptions={false}\r\n        components={{\r\n          Control: () => null\r\n        }}\r\n        />                        \r\n      </div>      \r\n      <div className={classes.Sm_Md}>\r\n      Mobile view\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className={classes.Visualisation} >\r\n    <div className={classes.KeyFigure__Md_Lg}>\r\n    {buttonGroup}      \r\n      <div className={classes.KeyFiguresWrapper}>\r\n          <Select \r\n          styles={styleVar}\r\n          options={optionsvariable} \r\n          className={classes.KeyFigures}\r\n          // // isMulti \r\n          value={selectedOptionvar}\r\n          onChange={ (e,d) => handleChangevar(e,d,history,setSelectedOptionvar,queryparse) }\r\n          components={{\r\n            // IndicatorSeparator: null,\r\n            IndicatorsContainer: IndicatorsContainer\r\n          }}\r\n          \r\n          />                \r\n      </div>      \r\n      <DatePicker\r\n      selectsRange={true}\r\n      startDate={startDate}\r\n      endDate={endDate}\r\n      customInput={<ExampleCustomInput />}\r\n      onChange={(update) => {\r\n        setDateRange(update);\r\n      }}\r\n      withPortal\r\n    />\r\n      <div className={classes.Sm_Md}>        \r\n        <Select \r\n          className={classes.KeyFigures}\r\n          styles={styleVar}\r\n          options={options}           \r\n          isMulti \r\n          value={queryoption}\r\n          onChange={ (e,d) => handleChange(e,d,history, selectedOptionvar,setSelectedOption,queryparsevar,selectedType)}          \r\n          hideSelectedOptions={true}\r\n          isClearable={false}\r\n          />                \r\n      </div>      \r\n    </div>\r\n    <div className={classes.LineGraph}>\r\n    {renderLineChart}\r\n    </div>    \r\n    {/* <div className={classes.socialgroupSM}>\r\n      <TwitterShareButton\r\n        url={\"https://mkmdivy.github.io/pacdigitalstory/\"+location.search}\r\n        title={\"The Economic Power of Africa's cities \\n\" + selectedOptionvar.label + \":\" + queryparse.toString() + \"\\n\" + \"Explore more here:\"}\r\n        className=\"Demo__some-network__share-button\">\r\n        <TwitterIcon\r\n          size={38}\r\n          bgStyle={{ fill: 'white'}} iconFillColor='#00ACEE'\r\n          round\r\n           />\r\n      </TwitterShareButton>\r\n      <FacebookShareButton\r\n      url={\"https://mkmdivy.github.io/pacdigitalstory/\"+location.search}\r\n      title=\"The Economic Power of Africa's cities\"\r\n      className=\"Demo__some-network__share-button\">\r\n      <FacebookIcon \r\n      size={38} \r\n      bgStyle={{ fill: 'white'}} iconFillColor='#4267B2'\r\n      round\r\n      />\r\n      </FacebookShareButton>      \r\n      <i className={classes.download} onClick={handleDownload}>\r\n        <i className={classes[\"download-icon\"]}> get_app </i>\r\n      </i>\r\n    </div> */}\r\n    <div className={classes.downloadbuttons}>\r\n    <button className={classes.buttonActivedownload} onClick={handleDownload}>Download chart image</button>    \r\n    <button className={classes.buttonActivedownload}>Download chart data</button>\r\n    <button className={classes.buttonActivedownload2}>Get the full dataset</button>\r\n    </div>\r\n  </div>  \r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction handleChange(e, d, history, selectedOptionvar, setSelectedOption ,queryparsevar, selectedType) {\r\n  if (e) {\r\n    if (e.length === 0 ) {\r\n      return;\r\n    } else {              \r\n        e=[e[e.length-1]]\r\n        const newCountries = e.map(d => d.value);       \r\n        // pushQuery(history, { country: newCountries });\r\n        history.push({\r\n            pathname: history.pathname,\r\n            search: queryString.stringify({country:newCountries,type:queryparsevar})  \r\n        })\r\n      }\r\n  }\r\n}\r\n\r\nfunction handleChangevar(e, d, history, setSelectedOptionvar,queryparse) {\r\n  if (e === null) {\r\n    return;\r\n  } else {\r\n    console.log(queryparse)    \r\n    let newcon = queryparse\r\n    newcon = typeof(queryparse)===\"string\"? queryparse : [queryparse[queryparse.length-1]]\r\n    setSelectedOptionvar(e)\r\n    console.log(newcon)\r\n    history.push({\r\n        pathname: history.pathname,\r\n        search: queryString.stringify({country:newcon,type:e.value})  \r\n    })\r\n}\r\n}\r\n\r\nfunction handleChangeType(e,setSelectedType, history,queryparse,queryparsevar) {\r\n  \r\n  const newcountry = typeof(queryparse)===\"string\"? queryparse : queryparse[queryparse.length-1]\r\n  setSelectedType(e)\r\nhistory.push({\r\n  pathname: history.pathname,\r\n  search: queryString.stringify({country:newcountry,type:queryparsevar,database:e})  \r\n})\r\n}\r\n\r\n\r\nfunction separator(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(    \r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>,\r\n document.getElementById('app'));\r\n"],"sourceRoot":""}