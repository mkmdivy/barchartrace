{"version":3,"sources":["Site.module.css","startup_total.png","Overview.js","App.js","index.js","startup.png"],"names":["module","exports","Overview","props","class","classes","column","startupimage","src","require","App","useState","value","label","setSelectedOption","selectedOptionvar","selectedType","setSelectedType","selectedsubType","setSelectedsubType","selectedSector","setSelectedSector","selectedGoogle","setSelectedGoogle","VennModule","Highcharts","highchartData","series","type","name","data","sets","color","title","text","date","Date","priorDate","setDate","getDate","dateRange","console","log","location","useLocation","history","useHistory","useCurrentPng","getPng","ref","optionsvariable","isLoading","renewablevariable","patentsvariable","startupvariable","googlevariable","queryoption","queryparse","search","queryString","parse","country","push","map","e","queryparsevar","queryoptionvar","selecteddb","forwardRef","onClick","className","buttonActivedownload2","startup1","selectedVariable","selectedValue","sCountries","Country_ISO3","options","optionsall","filteredData","filter","selectedData","keylists","some","f","Year","d","Set","toPercent","decimal","fixed","toFixed","colorBasket","useCallback","a","png","FileSaver","saveAs","countrylist","styles","menu","base","state","backgroundColor","borderRadius","boxShadow","height","option","isDisabled","isFocused","isSelected","groupHeading","fontSize","menuList","maxHeight","dropdownIndicator","control","isHidden","borderStyle","borderColor","borderWidth","singleValue","fontWeight","input","sectorSelect","dataKey","stackId","stroke","fill","classNamePrefix","defaultValue","components","IndicatorsContainer","onChange","isSearchable","countrySelect","handleChange","buttonGroup","buttonActive","button","handleChangeType","submenu","hidden","subbuttonActive","subbutton","startup","contents","maincontents","countryselect","highcharts","block","iframe","google","googleselect","googleselectcolumn","isMulti","googleoptions","length","handleChangeGoogle","menuIsOpen","hideSelectedOptions","Control","googlecolumn","topmenu","newCountries","pathname","stringify","newcountry","database","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6572ae4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactselect\":\"Site_reactselect__2_Hxi\",\"block\":\"Site_block__2JmsX\",\"maincontents\":\"Site_maincontents__2PAyW\",\"column\":\"Site_column__3Gq6F\",\"startupimage\":\"Site_startupimage__IgSgr\",\"countryselect\":\"Site_countryselect__1ZXCy\",\"googleselect\":\"Site_googleselect__3vKow\",\"googlecolumn\":\"Site_googlecolumn__XPzyF\",\"googleselectcolumn\":\"Site_googleselectcolumn__3pyIU\",\"iframe\":\"Site_iframe__17wU_\",\"subbuttonActive\":\"Site_subbuttonActive__1dbQz\",\"subbutton\":\"Site_subbutton__1cK_2\",\"hidden\":\"Site_hidden__3Jbzu\",\"submenu\":\"Site_submenu__2v9U0\",\"topmenu\":\"Site_topmenu__12VsI\",\"downloadbuttons\":\"Site_downloadbuttons__7gdxv\",\"KeyFiguresWrapper\":\"Site_KeyFiguresWrapper__15ehG\",\"socialgroup\":\"Site_socialgroup__O1D-N\",\"socialgroupSM\":\"Site_socialgroupSM__1GIpP\",\"Control\":\"Site_Control__2RJnA\",\"ControlInfo\":\"Site_ControlInfo__2zile\",\"material-icons\":\"Site_material-icons__2TOs4\",\"InfoTooltip\":\"Site_InfoTooltip__3KO1t\",\"download\":\"Site_download__3gOfN\",\"fullstory\":\"Site_fullstory__23vxB\",\"download-icon\":\"Site_download-icon__2v_oR\",\"span\":\"Site_span__3N-Gh\",\"ControlInfoS\":\"Site_ControlInfoS__2U5WT\",\"InfoTooltipS\":\"Site_InfoTooltipS__1ygIs\",\"KeyFigures\":\"Site_KeyFigures__2zev1\",\"LineGraph\":\"Site_LineGraph__1SmN9\",\"Visualisation\":\"Site_Visualisation__37KdB\",\"textgroup\":\"Site_textgroup__3UDlv\",\"Layout\":\"Site_Layout__2re9a\",\"Mixer\":\"Site_Mixer__1AFz7\",\"Sm_Md\":\"Site_Sm_Md__3eQDz\",\"Large\":\"Site_Large__1BjKJ\",\"SearchBar\":\"Site_SearchBar__2M5Y2\",\"SearchBar__Sm\":\"Site_SearchBar__Sm__3TLuw\",\"header\":\"Site_header__3eabk\",\"box\":\"Site_box__lfDpe\",\"TableHeader\":\"Site_TableHeader__2ZyIy\",\"button\":\"Site_button__yzVVc\",\"TableSearch\":\"Site_TableSearch__1SMJz\",\"mapContainer\":\"Site_mapContainer__2vyGm\",\"legend\":\"Site_legend__1m2rE\",\"Tooltip\":\"Site_Tooltip__y2-WU\",\"popup\":\"Site_popup__2VawH\",\"buttondist\":\"Site_buttondist__87ZIL\",\"buttonActive\":\"Site_buttonActive__DvDaW\",\"buttonActivedownload\":\"Site_buttonActivedownload__1FUeK\",\"buttonActivedownload2\":\"Site_buttonActivedownload2__3E5Z9\",\"topleft\":\"Site_topleft__28VNt\",\"table\":\"Site_table__27zvs\",\"tooltip\":\"Site_tooltip__2X4Yn\",\"logo\":\"Site_logo__2Iq7E\"};","module.exports = __webpack_public_path__ + \"static/media/startup_total.470b883e.png\";","import React from 'react';\r\nimport classes from './Site.module.css';\r\n\r\nconst Overview = props => {\r\n    return (  \r\n<div>\r\n<p>The creation of new enterprises, the different stages throughout the life of start-ups as well as their exit is key to analyse the clean energy transition. Since new firms bring disruptive technologies into the market, they will also be one of the vectors through which technologies enabling the Energy Transition can be developed and commercialised.</p>\r\n<p>The indicators we developed aim at covering the full lifetime of energy start-ups from creation to financing, also exploring the possible exits offered to them.</p>\r\n<h2>Crunchbase provides a database of 1.6 million start-ups with many associated tables that include useful elements:</h2>\r\n        <ul>\r\n              <li>Founding dates of start-ups</li>\r\n              <li>Funding amounts and types throughout their lifetime</li>\r\n              <li>Description of the start-ups, including text and sector classification</li>\r\n              <li>Details of the IPO</li>\r\n              <li>Details of the acquisition</li>\r\n              <li>People working in the company</li>\r\n        </ul>\r\n\r\n<h2>Start-ups life cycle</h2>\r\n<div class={classes.column}><img class={classes.startupimage} src={require('./startup_total.png')}/></div>       \r\n\r\n</div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Overview;","import React, { useState, useCallback, forwardRef } from 'react';\r\nimport Select, { components } from 'react-select'\r\nimport './index.css';\r\nimport data from './data.json';\r\nimport renewablevariable from './renewablevariable.json';\r\nimport patentsvariable from './patentsvariable.json';\r\nimport startupvariable from './startupvariable.json';\r\nimport googlevariable from './googlevariable.json';\r\nimport optionsall from './option.json';\r\n// import wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport { FacebookShareButton, FacebookIcon, TwitterIcon, TwitterShareButton} from 'react-share';\r\n// import { Badge, Chip } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import StackGrid from \"react-stack-grid\";\r\n// import { Web, Videocam, Description, PictureAsPdf} from '@material-ui/icons';\r\n// import ReactGA from 'react-ga';\r\nimport { AreaChart, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport queryString from \"query-string\";\r\nimport { useLocation, useParams, useHistory } from 'react-router';\r\nimport { useCurrentPng } from \"recharts-to-png\";\r\nimport FileSaver from \"file-saver\";\r\nimport startup1 from './startup1.json'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Highcharts from \"highcharts\"\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport VennModule from \"highcharts/modules/venn.js\";\r\nimport Overview from './Overview'\r\nimport Script from \"react-load-script\";\r\nimport googleoptions from './googleoptions.json'\r\n\r\nconst App = props => {\r\n\r\n\r\n\r\n  \r\n  const variablelist = {\"renewable1\":\"variable\",\"renewable2\":\"variable\",\"renewable3\":\"variable\",\"patents1\":\"Technology\",\"patents2\":\"Technology\",\"startup1\":\"sector\",\"startup2\":\"sector\",\"startup3\":\"sector\",\"startup4\":\"technology_field\",\"startup5\":\"sector\",\"startup6\":\"sector\",\"startup7\":\"sector\",\"startup8\":\"technology_field\",\"google1\":\"technology\"}\r\n  const valuelist = {\"renewable1\":\"share of res in demand\",\"renewable2\":\"share of res in demand\",\"renewable3\":\"share of res in demand\",\"patents1\":\"Value\",\"patents2\":\"Share\",\"startup1\":\"number_of_companies\",\"startup2\":\"number_of_companies\",\"startup3\":\"number_of_companies\",\"startup4\":\"number_of_companies\",\"startup5\":\"raised_amount_usd\",\"startup6\":\"raised_amount_usd\",\"startup7\":\"raised_amount_usd\",\"startup8\":\"raised_amount_usd\",\"google1\":\"value\"}\r\n\r\n  const [selectedOption, setSelectedOption] = useState([{value: 'the world', label: 'the world'}]);\r\n  const [selectedOptionvar, setSelectedOptionvar] = useState({value: 'startup1', label: 'Energy'});\r\n  const [selectedType, setSelectedType] = useState('startup');\r\n  const [selectedsubType, setSelectedsubType] = useState('');\r\n  const [selectedSector, setSelectedSector] = useState({value: 'Energy', label: 'Energy'});\r\n  const [selectedGoogle, setSelectedGoogle] = useState([{value: 'Coal', label: 'Coal'},{value: 'Oil', label: 'Oil'},{value: 'Solar', label: 'Solar'},{value: 'Wind', label: 'Wind'},{value: 'Hydrogen', label: 'Hydrogen'}]);\r\n\r\n    //////////////////////\r\n\r\n    VennModule(Highcharts);\r\n    let highchartData = {\r\n    series: [{\r\n      // showInLegend: true,\r\n      // legendType: 'point',\r\n      type: 'venn',\r\n      name: 'Number of Start-up',\r\n      data: [ {\r\n          sets: ['Energy'],\r\n          value: 32483,\r\n          color: selectedSector.value==='Energy'? 'blue' : 'lightgrey',\r\n          name: 'Energy'\r\n      }, {\r\n          sets: ['Green'],\r\n          value: 20307,\r\n          color: 'lightgrey'\r\n      }, {\r\n          sets: ['Digital'],\r\n          value: 501029,\r\n          color: 'lightgrey'      \r\n      }, {\r\n          sets: ['Energy', 'Green'],\r\n          value: 9105,\r\n          // name: 'Energy and Green',\r\n          name: selectedSector.value==='Energy and green'? 'Energy and green' : ' ',\r\n          color: selectedSector.value==='Energy and digital'? 'lightgrey' : 'blue',\r\n      }, {\r\n        sets: ['Energy','Digital'],\r\n        value: 11938,\r\n        // name: 'Energy and Digital',\r\n        name: selectedSector.value==='Energy and digital'? 'Energy and digital' : ' ',\r\n        color: selectedSector.value==='Energy and green'? 'lightgrey' : 'blue',\r\n      }, {\r\n        sets: ['Green','Digital'],\r\n        value: 6000,\r\n        name: ' ',\r\n        color: 'lightgrey'        \r\n      }, {\r\n        sets: ['Energy', 'Green','Digital'],\r\n        value: 3000,\r\n        // name: 'Energy, Green and Digital'\r\n        name: ' ',\r\n        color: 'blue'\r\n      }, \r\n    \r\n    ]\r\n  }],\r\n  \r\n    title: {\r\n        text: ''\r\n    }\r\n    }\r\n  \r\n  \r\n    //////////////////////\r\n\r\n  ////////////// Date set\r\n  \r\n  const date=new Date();\r\n  const priorDate = new Date(new Date().setDate(date.getDate() - 90));\r\n  // myPastDate.setDate(myPastDate.getDate() - 8);\r\n\r\n  const [dateRange, setDateRange] = useState([priorDate,date]);\r\n  console.log(date.getDate())\r\n  const [startDate, endDate] = dateRange;\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [getPng, { ref, isLoading }] = useCurrentPng();\r\n  // let optionsvariable = []\r\n  const optionsvariable = selectedType === \"renewable\"? renewablevariable : selectedType ===\"patents\"? patentsvariable : selectedType ===\"startup\"? startupvariable : googlevariable\r\n  \r\n  const queryoption =[]\r\n\r\n  const queryparse = location.search===\"\"?  \"the World\" : queryString.parse(location.search).country \r\n  typeof queryparse==='string'? queryoption.push({value:queryparse,label:queryparse}) : queryparse.map(e => queryoption.push({value:e,label:e}))  \r\n  const queryparsevar = location.search===\"\"?  'startup1' : queryString.parse(location.search).type\r\n  const queryoptionvar ={value:queryparsevar,label:optionsvariable.map(e=>e.value===queryparsevar? e.label : null)}\r\n\r\n  \r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className={classes.buttonActivedownload2} onClick={onClick} ref={ref}>\r\n      {value}\r\n    </button>\r\n  ));\r\n\r\n\r\n///////////////////////\r\n\r\n// patents1.filter['Country_ISO3']\r\n// patents1\r\n// const selecteddb = startup1\r\n// const selectedVariable=\"sector\"\r\n// const selectedValue=\"number_of_companies\"\r\n\r\n\r\n\r\nconst selecteddb =  startup1 \r\nconst selectedVariable=variablelist[queryoptionvar.value]\r\nconst selectedValue=valuelist[queryoptionvar.value]\r\n\r\n\r\n\r\nconst sCountries = []\r\nselecteddb.map(e => sCountries.push(e.Country_ISO3))\r\nconst options = optionsall\r\n// const options = optionsall.filter(e => sCountries.includes(e.value))\r\n\r\nconst filteredData = selecteddb.filter(e => e.Country_ISO3 === queryparse)\r\n\r\n\r\nconst selectedData = []\r\nlet keylists = []\r\nfilteredData.map(e => selectedData.some(f => f[\"Year\"] == e.Year)? null : selectedData.push({\"Year\":e.Year,\"Label\":e.Year}))\r\nfilteredData.map(e => keylists.push(e[selectedVariable]))\r\nfilteredData.map(d => selectedData.map(e => e.Year === d.Year? e[d[selectedVariable]] = d[selectedValue] : null ))\r\nkeylists = [...new Set(keylists)]\r\n\r\n  \r\n  const toPercent = (decimal, fixed = 0) => `${(decimal * 100).toFixed(fixed)}%`;\r\n  \r\n  const getPercent = (value, total) => {\r\n    const ratio = total > 0 ? value / total : 0;\r\n  \r\n    return toPercent(ratio, 2);\r\n  };\r\n  \r\n\r\n///////////////////////////////\r\n\r\n\r\n\r\nconst handleDownload = useCallback(async () => {\r\n  const png = await getPng();\r\n  // Verify that png is not undefined\r\n  if (png) {\r\n    // Download with FileSaver\r\n    FileSaver.saveAs(png, 'myChart.png');\r\n  }\r\n}, [getPng]);\r\n\r\n\r\nconst locale = \"en\"\r\n\r\n\r\nconst colorBasket = [\r\n  \"#a70000\",\r\n  \"rgb(246,186,112)\",\r\n  \"rgb(42,79,95)\",  \r\n  \"rgb(67,107,101)\",\r\n  \"rgb(133,163,147)\",    \r\n  \"rgb(197,209,191)\",\r\n  \"#F2DFD7\",  \r\n  \"#d4c1ec\",\r\n  \"#9f9fed\",    \r\n  \"#736ced\",\r\n  \"#bdc667\",\r\n  \"#77966d\",  \r\n  \"#626d58\",\r\n  \"#544343\",    \r\n  \"#56282d\",\r\n  ];  \r\n\r\n\r\n\r\n// let varlist = selectedType === 'patents'? {\"label\":\"haha\",\"value\":\"hoho\"} : null\r\n\r\n\r\n// options.map(e => disableList[selectedOptionvar.value].includes(e.value)? e.isDisabled=true : e.isDisabled=false)\r\n\r\n\r\n\r\nconst countrylist = []\r\n\r\n\r\nqueryoption.map(d=>countrylist.push(d.value))\r\n\r\n\r\nconst stylesinline = {    \r\n  container: base => ({\r\n    ...base,\r\n    flex: 1\r\n  }),\r\n  menu: (base, state) => {\r\n      return {\r\n          ...base,\r\n          backgroundColor: \"#ffffff\",\r\n          // backgroundColor: \"#fef7e7\",\r\n          borderRadius: 0,\r\n          boxShadow: 0,                    \r\n          // opacity: \".9\"\r\n          width: \"300px\",\r\n          \r\n      }\r\n  },\r\n  option: (base, { isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...base,\r\n      backgroundColor: isSelected ? \"#a70000\" : null,\r\n\r\n    }\r\n  },  \r\n  \r\n};\r\n\r\n  \r\n\r\n  const styles = {    \r\n    menu: (base, state) => {\r\n        return {\r\n            ...base,\r\n            backgroundColor: \"#ffffff\",\r\n            // backgroundColor: \"#fef7e7\",\r\n            borderRadius: 0,\r\n            boxShadow: 0,\r\n            height: '800px',\r\n            // opacity: \".9\"\r\n        }\r\n    },\r\n    option: (base, { isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...base,\r\n        backgroundColor: isSelected ? \"#1f3933\" : null,\r\n        // color: isDisabled\r\n        //   ? '#ccc'\r\n        //   : isSelected\r\n        //   ? chroma.contrast(color, 'white') > 2\r\n        //     ? 'white'\r\n        //     : 'black'\r\n        //   : data.color,\r\n        ':active': {\r\n          // ...styles[':active'],\r\n          // backgroundColor: isSelected ? \"#a70000\" : \"#a70000\",\r\n          // opacity: isSelected ? \".4\" : \".7\",\r\n          // color: isSelected ? \"#fef7e7\" : \".7\",\r\n        },\r\n      }\r\n    },\r\n    groupHeading: (base) => {\r\n      return {\r\n        ...base,\r\n        fontSize:'1.2rem',\r\n        color:'black'\r\n      }\r\n    },\r\n    menuList: (base, state) => {\r\n        return {\r\n            ...base,\r\n            maxHeight: 'none',\r\n            height: '100%',\r\n        }\r\n    },\r\n    dropdownIndicator: (base, state) => {\r\n      return { ...base,\r\n        \r\n      };\r\n    },\r\n    control: (base, state) => {\r\n      return { ...base,\r\n        isHidden: true, \r\n        boxShadow: 'none',\r\n        backgroundColor: 'none',\r\n        borderStyle: 'solid', \r\n        borderColor: '#449999',\r\n        borderWidth: '0px',\r\n        color: 'none', \r\n        \"&:hover\": { \r\n        }\r\n      };\r\n    },\r\n    singleValue: (base, state) => {\r\n      return {\r\n        ...base,\r\n        fontSize:'2rem',\r\n        fontWeight:'600',\r\n        color: '#212529',\r\n      }\r\n    },\r\n    input: (base, state) => {\r\n      return {\r\n        ...base,\r\n        fontSize:'2rem',\r\n        fontWeight:'900',\r\n        color: '#212529'\r\n      }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst styleVar = {\r\n  // indicatorSeparator: (base, state) => {\r\n\r\n  // },\r\n  menu: (base, state) => {\r\n      return {\r\n          ...base,\r\n          backgroundColor: \"white\",\r\n          borderRadius: 0,\r\n          boxShadow: 0,\r\n      }\r\n  },\r\n  menuList: (base, state) => {\r\n      return {\r\n          ...base,\r\n      }\r\n  },\r\n  control: (base, state) => {\r\n    return { ...base,\r\n      isHidden: true, \r\n      boxShadow: 'none',\r\n      backgroundColor: 'none',\r\n      borderStyle: 'solid', \r\n      borderColor: '#449999',\r\n      borderWidth: '0px',\r\n      color: 'none', \r\n      \"&:hover\": { \r\n      }\r\n    };\r\n  },\r\n  singleValue: (base, state) => {\r\n    return {\r\n      ...base,      \r\n      color: '#212529',\r\n      textAlign: \"right\",\r\n    }\r\n  },\r\n  input: (base, state) => {\r\n    return {\r\n      ...base,\r\n      color: '#212529'\r\n    }\r\n  },\r\n  multiValue: (base, state) => {\r\n    return {\r\n      ...base,\r\n      color: '#212529',\r\n      textAlign: \"right\",\r\n      backgroundColor: '#ffffff'\r\n    }\r\n  }\r\n};\r\n\r\nlet renderLineChart = (\r\n  <ResponsiveContainer height=\"100%\" ref={ref}>     \r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={selectedData}\r\n          stackOffset=\"expand\"\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Year\" />\r\n          <YAxis tickFormatter={toPercent} />\r\n          {/* <Legend/> */}\r\n          <Tooltip/>          \r\n          {keylists.map((e,f) => \r\n            <Area type=\"monotone\" dataKey={e} stackId=\"1\" stroke={colorBasket[f]} fill={colorBasket[f]} />  \r\n            )}\r\n          {/* <Area type=\"monotone\" dataKey=\"All technologies (total patents)\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" /> */}\r\n          {/* <Area type=\"monotone\" dataKey=\"b\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n          <Area type=\"monotone\" dataKey=\"c\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" /> */}\r\n        </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\n\r\nlet sectorSelect = (\r\n  <Select classNamePrefix=\"react-select\" className=\"react-select--inline\" options={[{\"value\":\"Energy\",\"label\":\"Energy\"},{\"value\":\"Energy and digital\",\"label\":\"Energy and digital\"},{\"value\":\"Energy and green\",\"label\":\"Energy and green\"},{'value':'By technology','label':'By energy technology'}]} defaultValue={{\"value\":\"Energy\",\"label\":\"Energy\"} }  components={{\r\n    IndicatorsContainer: () => null    \r\n  }}\r\n  value={selectedSector}\r\n  onChange = {e => setSelectedSector(e)}\r\n  isSearchable={false} /> \r\n);\r\n\r\nlet countrySelect = (\r\n  <Select classNamePrefix=\"react-select\" className=\"react-select--inline\" options={options} defaultValue={{\"value\":\"the world\",\"label\":\"the world\"} } \r\n  value={queryoption}\r\n  onChange={ (e,d) => handleChange(e,d,history, selectedOptionvar,setSelectedOption,queryparsevar,selectedType)} components={{\r\n    \r\n    IndicatorsContainer: () => null\r\n  }}\r\n  isSearchable={false} />\r\n);\r\n\r\nlet timeSelect = (\r\n  <Select classNamePrefix=\"react-select\" className=\"react-select--inline\" options={[{\"value\":\"Past 5 years\",\"label\":\"Past 5 years\"},{\"value\":\"Past 5 year\",\"label\":\"Past 12 months\"},{\"value\":\"Past 5 yes\",\"label\":\"Past 90 days\"},{\"value\":\"Past 5 year\",\"label\":\"Past day\"},{\"value\":\"Past 5 yeas\",\"label\":\"Past 4 hours\"}]} defaultValue={{\"value\":\"Past 5 year\",\"label\":\"Past 5 years\"} } \r\n  value={{\"value\":\"Past 5 years\",\"label\":\"Past 5 years\"} }\r\n  onChange={ (e,d) => handleChange(e,d,history, selectedOptionvar,setSelectedOption,queryparsevar,selectedType)} components={{\r\n    \r\n    IndicatorsContainer: () => null\r\n  }}\r\n  isSearchable={false} />\r\n);\r\n\r\nlet buttonGroup = (\r\n  <div className={classes.buttonGroup}>    \r\n      <button className={selectedType === 'overview'? classes.buttonActive : classes.button} onClick={() => handleChangeType('overview',setSelectedType,history,queryparse,queryparsevar)}>Overview</button>\r\n      <button className={selectedType === 'renewable'? classes.buttonActive : classes.button} onClick={() => handleChangeType('renewable',setSelectedType,history,queryparse,queryparsevar)}>Renewable energy</button>\r\n      <button className={selectedType === 'patents'? classes.buttonActive : classes.button} onClick={() => handleChangeType('patents',setSelectedType,history,queryparse,queryparsevar)}>Patents</button>\r\n      <button className={selectedType === 'startup'? classes.buttonActive : classes.button} onClick={() => handleChangeType('startup',setSelectedType,history,queryparse,queryparsevar)}>Start-ups</button>\r\n      <button className={selectedType === 'google'? classes.buttonActive : classes.button} onClick={() => handleChangeType('google',setSelectedType,history,queryparse,queryparsevar)}>Google Trends</button>    \r\n</div>\r\n);\r\n\r\nlet submenu = (\r\n<div>\r\n<div class={selectedType === 'startup'? classes.submenu : classes.hidden}>\r\n<button className={selectedsubType === 'energy0'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy0',setSelectedsubType,history,queryparse,queryparsevar)}>Overview</button>\r\n<button className={selectedsubType === 'energy1'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy1',setSelectedsubType,history,queryparse,queryparsevar)}>Create</button>\r\n<button className={selectedsubType === 'energy2'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy2',setSelectedsubType,history,queryparse,queryparsevar)}>Fundings</button>\r\n<button className={selectedsubType === 'energy3'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy3',setSelectedsubType,history,queryparse,queryparsevar)}>Exit</button>\r\n</div>\r\n{/* <div class={selectedType === 'google'? classes.submenu : classes.hidden}>\r\n<button className={selectedsubType === 'energy0'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy0',setSelectedsubType,history,queryparse,queryparsevar)}>Overview</button>\r\n<button className={selectedsubType === 'energy1'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy1',setSelectedsubType,history,queryparse,queryparsevar)}>Create</button>\r\n<button className={selectedsubType === 'energy2'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy2',setSelectedsubType,history,queryparse,queryparsevar)}>Fundings</button>\r\n<button className={selectedsubType === 'energy3'? classes.subbuttonActive : classes.subbutton} onClick={() => handleChangeType('energy3',setSelectedsubType,history,queryparse,queryparsevar)}>Exit</button>\r\n</div> */}\r\n</div>\r\n\r\n);\r\n\r\n// let menubar = (\r\n// );\r\n\r\nlet startup = (\r\n<div class={selectedType === 'startup'? classes.contents : classes.hidden} >\r\n  <div class={selectedsubType === 'energy0'? classes.maincontents : classes.hidden} >\r\n      <div class={classes.countryselect}>\r\n      <div class={classes.column}><img src='https://res.cloudinary.com/crunchbase-production/image/upload/v1528136300/clientapp/logo_crunchbase.svg'/></div>\r\n      </div>    \r\n      <Overview/>\r\n      <h2>Select the sectors - how many start-ups in {sectorSelect} in {countrySelect}  </h2>\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={highchartData}\r\n          />\r\n      <div class={classes.block}>\r\n      <p>It is kind of tutorial to show that what are the selectable variables and also give precise information what are the data we offer</p>      \r\n      <p> Question - is 'by technology' subset of energy? </p>\r\n      </div>\r\n      <h2>Select the countries - {countrySelect} in {sectorSelect}</h2>\r\n      <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9597761/embed\" ></iframe>\r\n  </div>\r\n  <div class={selectedsubType === 'energy1'? classes.maincontents : classes.hidden} >\r\n      <div class={classes.countryselect}>\r\n          <div class={classes.column}><img class={classes.startupimage} src={require('./startup.png')}/></div>       \r\n      </div>                                        \r\n      <h2>How many {sectorSelect}\r\n        start-ups are created each year? In {countrySelect} </h2>\r\n      <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9612074/embed\" ></iframe>\r\n      <div class={classes.block}>\r\n      <p>Select the country to see more detail (When you click the country on the map the graph and information will be country specific and above map will disappear, it is the entry point)</p>\r\n      <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n      <p>Energy startup ratio among the total starts-ups</p>\r\n      </div>\r\n      <h2>How many {sectorSelect} start-ups are created each year?</h2>\r\n      <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9501145/embed\" ></iframe>  \r\n      <div class={classes.block}>\r\n      <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n      <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n      <p>Energy startup ratio among the total starts-ups</p>\r\n      </div>\r\n      <h2>How successful {sectorSelect} start-ups?</h2>\r\n      <div class={classes.block}>\r\n      <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n      <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n      <p>Energy startup ratio among the total starts-ups</p>\r\n      </div>\r\n      <h2>Number of Starts-up by <b>technology</b></h2>\r\n      <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9361530/embed\" ></iframe>\r\n      <div class={classes.block}>\r\n      <p>Select the country to see more detail (When you click the country on the map the graph and information will be country specific and above map will disappear, it is the entry point)</p>\r\n      <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n      <p>Energy startup ratio among the total starts-ups</p>\r\n      </div>\r\n      <h2>Starts-up fundings ratio by <b>technology</b></h2>\r\n      <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9361197/embed\" ></iframe>\r\n  </div>    \r\n  <div class={selectedsubType === 'energy2'? classes.maincontents : classes.hidden} >\r\n  <div class={classes.countryselect}>\r\n          <div class={classes.column}><img class={classes.startupimage} src={require('./startup.png')}/></div>       \r\n      </div>                                        \r\n    <h2>How much USD {sectorSelect} start-ups are invested each year in {countrySelect}?</h2>\r\n        <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/10106952/embed\" ></iframe>  \r\n        <div class={classes.block}>\r\n          <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n          <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n          <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n    <h2>What kind of startup fundings exist (2007-2021)?</h2>\r\n    <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9623296/embed\" ></iframe>  \r\n    <div class={classes.block}>\r\n          <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n          <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n          <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n    <h2>How many years did it take to get the first fundings in {sectorSelect} in {countrySelect} on average?</h2>    \r\n    <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9627531/embed\" ></iframe>  \r\n    <div class={classes.block}>\r\n          <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n          <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n          <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n    <h2>How many years did it take to get the first fundings in {sectorSelect} in {countrySelect} on average?</h2>    \r\n    <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9646133/embed\" ></iframe>          \r\n    <div class={classes.block}>\r\n          <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n          <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n          <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n  </div>\r\n  <div class={selectedsubType === 'energy3'? classes.maincontents : classes.hidden} >\r\n  <div class={classes.countryselect}>\r\n          <div class={classes.column}><img class={classes.startupimage} src={require('./startup.png')}/></div>       \r\n      </div>                                        \r\n    <h2>How successful were start-ups in {sectorSelect} in {countrySelect}?</h2>\r\n        <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9599339/embed\" ></iframe>  \r\n        <div class={classes.block}>\r\n        <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n        <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n        <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n    <h2>How successful were start-ups in {sectorSelect} in {countrySelect}?</h2>\r\n        <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9599483/embed\" ></iframe>  \r\n        <div class={classes.block}>\r\n        <p>Switch possible between Ratio (Energy / Total startsup), or line graph absolute numbers</p>\r\n        <p>This will be good method and the only method to put Energy, Energy and digital, Energy and Green in parallel. ('By technology' becomes part of each) Also natrually bring people attention to country have many points.</p>\r\n        <p>Energy startup ratio among the total starts-ups</p>\r\n        </div>\r\n\r\n  </div>   \r\n  </div>  \r\n\r\n);\r\n\r\n\r\n\r\nlet google = (\r\n\r\n<div class={selectedType === 'google'? classes.maincontents : classes.hidden} >  \r\n<h2>How many times a keyword is searched on Google in {countrySelect} and in {countrySelect}?</h2>\r\n <div class={classes.googleselect}>\r\n   <div class={classes.googleselectcolumn}>    \r\n      <Select \r\n            styles={styles}            \r\n            isSearchable={false}\r\n            isMulti             \r\n            options={googleoptions} \r\n            // defaultValue={[{\"value\": \"Nuclear\", \"label\": \"Nuclear\"}] } \r\n            value={selectedGoogle} \r\n            onChange={ (e,d) => handleChangeGoogle(e,d,history, selectedOptionvar,setSelectedGoogle,queryparsevar,selectedType)}            \r\n            menuIsOpen={true}\r\n            hideSelectedOptions={false}\r\n            components={{\r\n              Control: () => null\r\n            }}\r\n            />                        \r\n    </div>\r\n    <div class={classes.googlecolumn}>\r\n    <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9897170/embed\" ></iframe>  \r\n    <iframe class={classes.iframe} src=\"https://flo.uri.sh/visualisation/9897170/embed\" ></iframe>  \r\n    </div>\r\n \r\n    </div>\r\n    \r\n</div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\nreturn (  \r\n<div>\r\n<div class={classes.topmenu}>\r\n{buttonGroup}      \r\n{submenu}\r\n</div>\r\n{startup}\r\n{google}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction handleChange(e, d, history, selectedOptionvar, setSelectedOption ,queryparsevar, selectedType) {  \r\n  if (e) {\r\n    if (e.length === 0 ) {\r\n      return;\r\n    } else {                      \r\n        setSelectedOption(e)\r\n        const newCountries = e.label;       \r\n        // pushQuery(history, { country: newCountries });\r\n        history.push({\r\n            pathname: history.pathname,\r\n            search: queryString.stringify({country:newCountries,type:queryparsevar})  \r\n        })\r\n      }\r\n  }\r\n}\r\n\r\nfunction handleChangevar(e, d, history, setSelectedOptionvar,queryparse) {\r\n  if (e === null) {\r\n    return;\r\n  } else {\r\n    console.log(queryparse)    \r\n    let newcon = queryparse\r\n    newcon = typeof(queryparse)===\"string\"? queryparse : [queryparse[queryparse.length-1]]\r\n    setSelectedOptionvar(e)\r\n    console.log(newcon)\r\n    history.push({\r\n        pathname: history.pathname,\r\n        search: queryString.stringify({country:newcon,type:e.value})  \r\n    })\r\n}\r\n}\r\n\r\nfunction handleChangeType(e,setSelectedType, history,queryparse,queryparsevar) {\r\n  \r\n  const newcountry = typeof(queryparse)===\"string\"? queryparse : queryparse[queryparse.length-1]\r\n  setSelectedType(e)\r\nhistory.push({\r\n  pathname: history.pathname,\r\n  search: queryString.stringify({country:newcountry,type:queryparsevar,database:e})  \r\n})\r\n}\r\n\r\nfunction handleChangeGoogle(e, d, history, selectedOptionvar, setSelectedOption ,queryparsevar, selectedType) {\r\n  if (e) {\r\n    if (e.length === 0 ) {\r\n      return;\r\n    } else {                      \r\n      setSelectedOption(e)\r\n        // const newCountries = e.map(d => d.value);       \r\n        // // pushQuery(history, { country: newCountries });\r\n        // history.push({\r\n        //     pathname: history.pathname,\r\n        //     search: queryString.stringify({google:newCountries})  \r\n        // })\r\n      }\r\n  }\r\n}\r\n\r\n\r\nfunction separator(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(    \r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>,\r\n document.getElementById('app'));\r\n","module.exports = __webpack_public_path__ + \"static/media/startup.3e246b85.png\";"],"sourceRoot":""}